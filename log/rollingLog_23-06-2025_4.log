[2025-06-23 14:42:06,424] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
[2025-06-23 14:42:06,496] INFO  com.example.order_service.OrderServiceApplication - Starting OrderServiceApplication using Java 21.0.7 with PID 26932 (D:\tailieu\Ki_2-Nam_3\Intern\SpringBoot\order_service\target\classes started by chien in D:\tailieu\Ki_2-Nam_3\Intern\SpringBoot\order_service)
[2025-06-23 14:42:06,502] INFO  com.example.order_service.OrderServiceApplication - No active profile set, falling back to 1 default profile: "default"
[2025-06-23 14:42:06,503] DEBUG org.springframework.boot.SpringApplication - Loading source class com.example.order_service.OrderServiceApplication
[2025-06-23 14:42:06,551] DEBUG org.springframework.boot.devtools.restart.ChangeableUrls - Matching URLs for reloading : [file:/D:/tailieu/Ki_2-Nam_3/Intern/SpringBoot/order_service/target/classes/]
[2025-06-23 14:42:06,552] DEBUG org.springframework.boot.devtools.settings.DevToolsSettings - Included patterns for restart : []
[2025-06-23 14:42:06,552] DEBUG org.springframework.boot.devtools.settings.DevToolsSettings - Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
[2025-06-23 14:42:06,552] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2025-06-23 14:42:06,552] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2025-06-23 14:42:06,553] DEBUG org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d0c146
[2025-06-23 14:42:07,410] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2025-06-23 14:42:07,429] DEBUG org.springframework.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.example.order_service'. Automatic @Repository and @Entity scanning is enabled.
[2025-06-23 14:42:07,480] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 4 JPA repository interfaces.
[2025-06-23 14:42:08,140] DEBUG org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\chien\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar
[2025-06-23 14:42:08,141] DEBUG org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\chien\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar
[2025-06-23 14:42:08,141] DEBUG org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
[2025-06-23 14:42:08,194] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
[2025-06-23 14:42:08,212] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2025-06-23 14:42:08,216] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
[2025-06-23 14:42:08,216] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.41]
[2025-06-23 14:42:08,267] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2025-06-23 14:42:08,267] DEBUG org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
[2025-06-23 14:42:08,269] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1714 ms
[2025-06-23 14:42:08,284] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
[2025-06-23 14:42:08,284] DEBUG org.springframework.boot.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/]
[2025-06-23 14:42:08,310] DEBUG org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
[2025-06-23 14:42:08,312] DEBUG org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
[2025-06-23 14:42:08,312] DEBUG org.springframework.boot.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
[2025-06-23 14:42:08,465] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2025-06-23 14:42:08,549] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.15.Final
[2025-06-23 14:42:08,593] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
[2025-06-23 14:42:08,911] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
[2025-06-23 14:42:08,944] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2025-06-23 14:42:09,390] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e3b7dad
[2025-06-23 14:42:09,393] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2025-06-23 14:42:09,484] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.1
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
[2025-06-23 14:42:10,397] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[2025-06-23 14:42:10,478] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2025-06-23 14:42:10,887] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2025-06-23 14:42:11,165] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
[2025-06-23 14:42:11,277] DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
[2025-06-23 14:42:11,312] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
[2025-06-23 14:42:11,401] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
[2025-06-23 14:42:11,428] DEBUG org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 0 ResponseBodyAdvice
[2025-06-23 14:42:11,605] DEBUG org.springframework.boot.devtools.livereload.LiveReloadServer - Starting live reload server on port 35729
[2025-06-23 14:42:11,607] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2025-06-23 14:42:11,624] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2025-06-23 14:42:11,644] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
[2025-06-23 14:42:11,657] DEBUG org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnBooleanProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: ?; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.sql.DataSource' (OnClassCondition)
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnBooleanProperty (server.error.whitelabel.enabled=true) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBooleanProperty (server.servlet.encoding.enabled=true) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HypermediaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.hateoas.EntityModel', 'org.springframework.web.bind.annotation.RequestMapping', 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter', 'org.springframework.plugin.core.Plugin' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   HypermediaAutoConfiguration#applicationJsonHalConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnBooleanProperty (spring.hateoas.use-hal-as-default-json-media-type=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.hateoas.mediatype.hal.HalConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnPreferredJsonMapper JACKSON no property was configured and Jackson is the default (OnPreferredJsonMapperCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBooleanProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnBooleanProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnBooleanProperty (spring.jta.enabled=true) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnBooleanProperty (spring.devtools.livereload.enabled=true) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnBooleanProperty (spring.devtools.restart.enabled=true) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnBooleanProperty (spring.devtools.restart.log-condition-evaluation-delta=true) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBooleanProperty (spring.servlet.multipart.enabled=true) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnBooleanProperty (spring.dao.exceptiontranslation.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.VirtualThreadsExecutorEnabled found non-matching nested conditions @ConditionalOnThreading did not find VIRTUAL; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.NotReactiveWebApplication NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnBooleanProperty (spring.sql.init.enabled=true) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'spring.sql.init.mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.AsyncConfigurerConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.AsyncConfigurerConfiguration#applicationTaskExecutorAsyncConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ModelCondition @ConditionalOnProperty (spring.task.execution.mode=force) did not find property 'spring.task.execution.mode'; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ExecutorBeanCondition @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (TaskExecutorConfigurations.OnExecutorCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TemplateEngineConfigurations.DefaultTemplateEngineConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring6.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBooleanProperty (spring.thymeleaf.enabled=true) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.view.AbstractCachingViewResolver' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnBooleanProperty (spring.mvc.formcontent.filter.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:
      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration.HypermediaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.hateoas.client.LinkDiscoverers; SearchStrategy: all) found beans of type 'org.springframework.hateoas.client.LinkDiscoverers' linkDiscoverers (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'spring.datasource.jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'spring.data.jpa.repositories.bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'spring.data.jpa.repositories.bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.nimbusds.jose.jwk.source.JWKSource' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ClientWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcProxyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ClientWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'spring.devtools.remote.secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnBooleanProperty (spring.application.admin.enabled=true) did not find property 'spring.application.admin.enabled' (OnPropertyCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) found beans of type 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' pageableResolver (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TemplateEngineConfigurations.ReactiveTemplateEngineConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect', 'org.springframework.security.web.server.csrf.CsrfToken' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnBooleanProperty (spring.mvc.hiddenmethod.filter.enabled=true) did not find property 'spring.mvc.hiddenmethod.filter.enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnBooleanProperty (spring.mvc.problemdetails.enabled=true) did not find property 'spring.mvc.problemdetails.enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



[2025-06-23 14:42:11,661] INFO  com.example.order_service.OrderServiceApplication - Started OrderServiceApplication in 5.637 seconds (process running for 6.664)
[2025-06-23 14:42:11,664] DEBUG org.springframework.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
[2025-06-23 14:42:11,666] DEBUG org.springframework.boot.devtools.restart.Restarter - Creating new Restarter for thread Thread[#1,main,5,main]
[2025-06-23 14:42:11,667] DEBUG org.springframework.boot.devtools.restart.Restarter - Immediately restarting application
[2025-06-23 14:42:11,667] DEBUG org.springframework.boot.devtools.restart.Restarter - Starting application com.example.order_service.OrderServiceApplication with URLs [file:/D:/tailieu/Ki_2-Nam_3/Intern/SpringBoot/order_service/target/classes/]
[2025-06-23 14:42:11,667] DEBUG org.springframework.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
[2025-06-23 14:43:12,474] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2025-06-23 14:43:12,475] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2025-06-23 14:43:12,475] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
[2025-06-23 14:43:12,475] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
[2025-06-23 14:43:12,475] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
[2025-06-23 14:43:12,476] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@ec5c370
[2025-06-23 14:43:12,477] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7e48d06
[2025-06-23 14:43:12,477] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
[2025-06-23 14:43:12,477] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
[2025-06-23 14:43:12,489] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:12,503] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:12,725] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:12,769] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:12,815] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:12,828] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:12,838] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:12,882] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:12,882] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:12,882] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:12,885] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:12,888] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:12,891] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:12,891] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:12,891] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:12,892] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:13,908] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:13,908] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:13,912] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:13,914] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:13,916] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:13,917] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:13,917] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:13,919] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:13,922] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:13,923] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:13,927] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:13,928] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:13,933] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:13,934] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:13,934] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:13,935] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:15,703] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:43:15,704] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:43:15,708] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:43:15,824] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,859] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,860] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,863] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,866] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,867] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:43:15,869] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:15,882] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:43:15,889] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:15,891] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:43:15,892] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:43:15,895] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:43:15,900] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,905] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,907] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,910] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,914] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:15,916] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:43:15,916] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:15,918] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:43:15,918] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:17,716] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:17,716] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:17,719] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:17,721] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:17,724] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:17,724] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:17,725] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:17,726] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:17,728] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:17,729] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:17,732] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:17,734] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:17,737] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:17,737] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:17,737] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:17,739] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:18,979] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 14:43:18,979] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 14:43:18,983] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 14:43:18,986] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 14:43:18,986] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:18,988] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 14:43:18,991] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:18,992] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 14:43:18,992] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 14:43:18,994] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 14:43:18,997] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 14:43:18,998] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:18,998] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 14:43:18,999] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:20,255] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 14:43:20,257] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 14:43:20,257] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:20,257] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:43:20,258] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:20,258] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:43:20,260] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:20,260] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 14:43:20,260] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:43:20,262] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 14:43:20,264] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:20,264] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 14:43:20,264] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,266] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 14:43:20,266] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,267] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:20,267] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 14:43:20,267] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:20,267] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:20,267] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,267] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 14:43:20,268] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:20,269] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,269] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:20,269] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:20,271] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 14:43:20,272] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:20,272] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,272] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:20,273] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:43:20,273] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:20,274] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:20,274] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:43:20,275] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:20,276] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:20,277] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:43:20,277] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:20,277] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:43:20,277] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:20,278] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:20,279] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 14:43:20,280] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:43:20,281] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:20,283] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,283] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 14:43:20,284] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 14:43:20,286] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,287] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 14:43:20,288] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,288] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 14:43:20,290] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 14:43:20,290] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,291] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 14:43:20,292] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:43:20,293] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 14:43:20,293] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:43:20,293] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:20,293] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:43:20,294] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 14:43:20,295] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:20,298] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 14:43:20,298] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:20,299] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 14:43:20,300] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:22,119] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:22,119] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:22,123] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:22,124] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:22,128] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:22,128] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:22,129] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:22,130] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:22,131] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:22,131] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:22,134] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:22,136] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:22,138] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:22,138] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:22,139] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:22,140] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:26,819] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars/2", parameters={}
[2025-06-23 14:43:26,820] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#deleteCar(int)
[2025-06-23 14:43:26,821] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:26,826] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/cars/2", parameters={}
[2025-06-23 14:43:26,827] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#deleteCar(int)
[2025-06-23 14:43:26,839] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 14:43:26,878] DEBUG org.hibernate.SQL - delete from car where id=?
[2025-06-23 14:43:26,925] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 1451, SQLState: 23000
[2025-06-23 14:43:26,925] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Cannot delete or update a parent row: a foreign key constraint fails (`quanlyoto`.`rental`, CONSTRAINT `FKqoq449d7f5x3a9as634tj4l4b` FOREIGN KEY (`car_id`) REFERENCES `car` (`id`))
[2025-06-23 14:43:26,941] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Cannot delete or update a parent row: a foreign key constraint fails (`quanlyoto`.`rental`, CONSTRAINT `FKqoq449d7f5x3a9as634tj4l4b` FOREIGN KEY (`car_id`) REFERENCES `car` (`id`))] [delete from car where id=?]; SQL [delete from car where id=?]; constraint [null]
[2025-06-23 14:43:26,941] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Cannot delete or update a parent row: a foreign key constraint fails (`quanlyoto`.`rental`, CONSTRAINT `FKqoq449d7f5x3a9as634tj4l4b` FOREIGN KEY (`car_id`) REFERENCES `car` (`id`))] [delete from car where id=?]; SQL [delete from car where id=?]; constraint [null]] with root cause
java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`quanlyoto`.`rental`, CONSTRAINT `FKqoq449d7f5x3a9as634tj4l4b` FOREIGN KEY (`car_id`) REFERENCES `car` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994) ~[mysql-connector-j-8.0.33.jar:8.0.33]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-6.3.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-6.3.0.jar:?]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.persister.entity.mutation.AbstractDeleteCoordinator.doStaticDelete(AbstractDeleteCoordinator.java:279) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.persister.entity.mutation.AbstractDeleteCoordinator.delete(AbstractDeleteCoordinator.java:87) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.action.internal.EntityDeleteAction.execute(EntityDeleteAction.java:131) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:644) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:511) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:414) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1429) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:491) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2354) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1978) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-6.6.15.Final.jar:6.6.15.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562) ~[spring-orm-6.2.7.jar:6.2.7]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795) ~[spring-tx-6.2.7.jar:6.2.7]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.2.7.jar:6.2.7]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698) ~[spring-tx-6.2.7.jar:6.2.7]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416) ~[spring-tx-6.2.7.jar:6.2.7]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.7.jar:6.2.7]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.7.jar:6.2.7]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.7.jar:6.2.7]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.7.jar:6.2.7]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.5.0.jar:3.5.0]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.7.jar:6.2.7]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.7.jar:6.2.7]
	at jdk.proxy4/jdk.proxy4.$Proxy150.delete(Unknown Source) ~[?:?]
	at com.example.order_service.service.CarServiceImpl.deleteCar(CarServiceImpl.java:131) ~[classes/:?]
	at com.example.order_service.controller.CarController.deleteCar(CarController.java:86) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 14:43:26,961] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for DELETE "/error", parameters={}
[2025-06-23 14:43:26,962] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 14:43:26,970] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:26,971] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 14:43:26 ICT 2025, status=500, error=Internal Server Error, trace=org.springfr (truncated)...]
[2025-06-23 14:43:26,979] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 14:43:30,826] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars/103", parameters={}
[2025-06-23 14:43:30,826] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#deleteCar(int)
[2025-06-23 14:43:30,827] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:30,829] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/cars/103", parameters={}
[2025-06-23 14:43:30,829] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#deleteCar(int)
[2025-06-23 14:43:30,832] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 14:43:30,836] DEBUG org.hibernate.SQL - delete from car where id=?
[2025-06-23 14:43:30,849] INFO  com.example.order_service.service.CarServiceImpl - Xoá xe có ID: 103 thành công
[2025-06-23 14:43:30,850] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:30,850] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 14:43:30,850] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:30,853] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:30,853] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:30,856] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:30,858] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:30,860] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:30,861] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:30,861] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:30,862] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:33,360] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars/153", parameters={}
[2025-06-23 14:43:33,361] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#deleteCar(int)
[2025-06-23 14:43:33,362] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:33,365] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/cars/153", parameters={}
[2025-06-23 14:43:33,365] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#deleteCar(int)
[2025-06-23 14:43:33,367] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 14:43:33,372] DEBUG org.hibernate.SQL - delete from car where id=?
[2025-06-23 14:43:33,389] INFO  com.example.order_service.service.CarServiceImpl - Xoá xe có ID: 153 thành công
[2025-06-23 14:43:33,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:33,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 14:43:33,391] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:43:33,394] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:43:33,394] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:43:33,397] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:43:33,398] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:43:33,400] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:43:33,401] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:43:33,401] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:43:33,402] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:46:46,580] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/rentals", parameters={}
[2025-06-23 14:46:46,581] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 14:46:46,581] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzminn0zph3c50n3vpko.lite.vusercontent.net' origin is not allowed
[2025-06-23 14:46:46,582] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 14:46:46,583] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 14:46:46,583] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 14:46:46,584] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzminn0zph3c50n3vpko.lite.vusercontent.net' origin is not allowed
[2025-06-23 14:46:46,584] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 14:46:46,623] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users", parameters={}
[2025-06-23 14:46:46,623] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars", parameters={}
[2025-06-23 14:46:46,623] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:46:46,623] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:46:46,623] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzminn0zph3c50n3vpko.lite.vusercontent.net' origin is not allowed
[2025-06-23 14:46:46,624] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzminn0zph3c50n3vpko.lite.vusercontent.net' origin is not allowed
[2025-06-23 14:46:46,624] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 14:46:46,624] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 14:46:46,626] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:46:46,626] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:46:46,626] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:46:46,626] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:46:46,626] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzminn0zph3c50n3vpko.lite.vusercontent.net' origin is not allowed
[2025-06-23 14:46:46,626] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzminn0zph3c50n3vpko.lite.vusercontent.net' origin is not allowed
[2025-06-23 14:46:46,627] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 14:46:46,627] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 14:59:13,593] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:59:13,596] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:59:13,602] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:59:13,604] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:59:13,607] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:59:13,608] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:13,608] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:59:13,609] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:59:13,611] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 14:59:13,612] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 14:59:13,615] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 14:59:13,618] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 14:59:13,621] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 14:59:13,621] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:13,621] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 14:59:13,622] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:59:18,773] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:59:18,773] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:59:18,775] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:59:18,780] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,783] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,786] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,788] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,790] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,791] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:59:18,793] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:18,793] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:59:18,794] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:59:18,796] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:59:18,796] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:59:18,799] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:59:18,801] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,803] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,805] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,806] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,807] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:18,809] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:59:18,809] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:18,810] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:59:18,811] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:59:42,901] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 14:59:42,901] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 14:59:42,924] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@24333efe]
[2025-06-23 14:59:42,948] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 14:59:42,958] DEBUG org.hibernate.SQL - select next_val as id_val from user_seq for update
[2025-06-23 14:59:42,978] DEBUG org.hibernate.SQL - update user_seq set next_val= ? where next_val=?
[2025-06-23 14:59:42,990] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 14:59:42,996] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 14:59:42,997] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:42,998] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=aaa]]
[2025-06-23 14:59:42,999] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:59:43,001] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:59:43,002] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:59:43,004] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:59:43,006] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:43,008] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:43,009] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:43,011] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:43,014] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:43,015] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:43,016] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:59:43,017] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:43,017] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:59:43,018] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:59:59,794] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 14:59:59,795] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 14:59:59,795] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@2bbc549c]
[2025-06-23 14:59:59,798] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 14:59:59,800] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 14:59:59,803] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 14:59:59,804] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:59,804] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=Chien lgend]]
[2025-06-23 14:59:59,804] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 14:59:59,807] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 14:59:59,808] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 14:59:59,810] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 14:59:59,814] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:59,816] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:59,817] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:59,819] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:59,821] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:59,822] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:59,823] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 14:59:59,823] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 14:59:59,824] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 14:59:59,824] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 14:59:59,825] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:13,875] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:00:13,876] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:00:13,876] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@5b810b61]
[2025-06-23 15:00:13,877] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:00:13,880] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:00:13,883] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:00:13,883] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:13,884] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=2]]
[2025-06-23 15:00:13,884] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:13,888] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:00:13,888] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:00:13,891] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:00:13,893] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,895] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,897] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,899] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,902] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,904] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,905] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,906] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:13,908] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:00:13,908] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:13,909] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:00:13,909] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:20,860] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:00:20,860] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:00:20,861] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@510a0c3a]
[2025-06-23 15:00:20,863] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:00:20,865] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:00:20,878] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:00:20,879] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:20,879] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=4]]
[2025-06-23 15:00:20,880] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:20,881] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:00:20,881] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:00:20,884] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:00:20,886] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,888] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,889] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,889] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,891] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,892] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,893] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,894] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,895] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:20,897] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:00:20,897] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:20,897] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:00:20,898] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:36,062] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users/105", parameters={}
[2025-06-23 15:00:36,063] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:36,063] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:36,065] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/users/105", parameters={}
[2025-06-23 15:00:36,065] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:36,068] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:00:36,071] DEBUG org.hibernate.SQL - delete from user where id=?
[2025-06-23 15:00:36,085] INFO  com.example.order_service.service.UserServiceImpl - Xoá thành công người dùng có ID: 105
[2025-06-23 15:00:36,085] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:36,085] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:00:36,086] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:36,093] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:00:36,093] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:00:36,095] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:00:36,097] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,098] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,099] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,100] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,101] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,102] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,103] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,105] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:36,106] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:00:36,106] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:36,106] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:00:36,107] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:38,716] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users/104", parameters={}
[2025-06-23 15:00:38,716] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:38,717] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:38,718] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/users/104", parameters={}
[2025-06-23 15:00:38,719] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:38,720] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:00:38,724] DEBUG org.hibernate.SQL - delete from user where id=?
[2025-06-23 15:00:38,727] INFO  com.example.order_service.service.UserServiceImpl - Xoá thành công người dùng có ID: 104
[2025-06-23 15:00:38,727] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:38,727] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:00:38,728] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:38,731] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:00:38,731] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:00:38,733] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:00:38,735] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:38,738] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:38,739] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:38,741] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:38,742] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:38,743] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:38,744] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:38,744] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:00:38,745] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:38,745] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:00:38,746] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:41,140] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users/103", parameters={}
[2025-06-23 15:00:41,141] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:41,141] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:41,143] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/users/103", parameters={}
[2025-06-23 15:00:41,143] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:41,145] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:00:41,148] DEBUG org.hibernate.SQL - delete from user where id=?
[2025-06-23 15:00:41,162] INFO  com.example.order_service.service.UserServiceImpl - Xoá thành công người dùng có ID: 103
[2025-06-23 15:00:41,163] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:41,163] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:00:41,163] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:41,166] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:00:41,166] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:00:41,168] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:00:41,170] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:41,172] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:41,173] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:41,173] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:41,175] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:41,176] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:41,176] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:00:41,177] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:41,177] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:00:41,178] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:43,285] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users/102", parameters={}
[2025-06-23 15:00:43,285] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:43,285] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:43,287] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/users/102", parameters={}
[2025-06-23 15:00:43,287] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:00:43,289] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:00:43,291] DEBUG org.hibernate.SQL - delete from user where id=?
[2025-06-23 15:00:43,305] INFO  com.example.order_service.service.UserServiceImpl - Xoá thành công người dùng có ID: 102
[2025-06-23 15:00:43,305] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:43,305] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:00:43,305] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:00:43,308] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:00:43,308] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:00:43,310] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:00:43,312] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:43,314] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:43,314] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:43,316] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:43,317] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:00:43,318] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:00:43,318] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:00:43,318] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:00:43,319] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:05:44,781] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/rentals", parameters={}
[2025-06-23 15:05:44,781] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:05:44,781] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmqpsf3geyqd8r3pxdw.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:05:44,781] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:05:44,783] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users", parameters={}
[2025-06-23 15:05:44,783] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars", parameters={}
[2025-06-23 15:05:44,783] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:05:44,783] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:05:44,783] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:05:44,783] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:05:44,784] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmqpsf3geyqd8r3pxdw.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:05:44,784] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmqpsf3geyqd8r3pxdw.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:05:44,784] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmqpsf3geyqd8r3pxdw.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:05:44,784] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:05:44,784] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:05:44,784] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:05:44,785] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:05:44,785] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:05:44,785] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:05:44,785] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:05:44,785] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmqpsf3geyqd8r3pxdw.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:05:44,785] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmqpsf3geyqd8r3pxdw.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:05:44,786] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:05:44,786] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:12:07,445] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:07,445] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:07,445] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:07,445] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:07,445] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:07,445] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:07,447] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:07,447] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:07,447] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:07,449] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:07,449] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:07,450] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,451] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:07,451] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:07,451] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,451] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:07,453] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:07,453] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:07,454] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,454] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:07,454] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:07,455] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,455] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:07,456] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:07,457] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:07,457] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,459] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:07,459] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:07,459] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:07,459] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:07,459] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:07,459] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:07,460] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:07,460] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:07,460] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:07,461] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:07,461] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:07,461] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:07,462] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:07,462] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:07,463] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:07,463] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:07,463] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:07,463] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:07,463] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:07,463] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:07,464] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:07,465] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,465] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:07,468] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:07,468] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,469] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,469] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:07,469] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,470] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:07,470] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:07,471] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:07,471] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:07,471] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:07,471] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:07,472] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:07,472] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:07,472] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:07,472] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:17,786] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:17,786] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:17,786] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:17,786] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:17,786] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:17,786] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:17,789] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:17,789] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:17,789] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:17,790] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:17,790] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:17,791] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:17,791] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:17,791] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,792] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:17,792] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:17,792] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:17,792] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:17,793] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:17,794] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:17,794] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,795] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,795] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:17,795] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:17,796] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:17,797] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:17,797] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,797] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:17,797] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:17,798] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:17,798] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,798] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:17,799] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:17,799] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:17,800] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:17,802] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:17,802] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:17,804] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:17,804] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:17,804] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:17,805] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:17,805] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:17,805] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:17,805] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:17,806] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:17,806] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:17,807] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:17,807] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:17,808] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:17,809] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:17,809] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,810] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:17,810] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,811] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,812] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:17,812] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,812] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:17,813] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:17,813] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:17,813] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:17,814] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:17,814] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:17,815] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:17,815] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:21,790] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:21,790] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:21,790] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:21,790] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:21,790] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:21,790] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:21,792] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:21,792] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:21,792] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:21,793] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:21,793] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:21,794] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:21,794] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,794] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:21,795] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:21,795] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:21,795] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:21,795] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,795] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:21,796] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:21,796] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,796] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:21,797] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:21,797] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,797] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:21,798] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:21,798] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:21,798] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,798] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:21,800] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:21,800] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:21,800] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:21,800] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:21,801] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:21,801] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:21,801] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:21,802] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:21,802] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:21,803] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:21,803] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:21,803] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:21,803] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:21,804] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:21,804] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:21,804] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:21,805] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:21,806] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:21,806] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:21,807] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:21,807] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,808] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:21,808] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,809] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:21,809] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,812] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:21,813] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,813] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:21,813] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:21,814] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:21,816] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:21,818] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:21,820] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:21,821] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:21,822] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:32,750] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:32,750] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:32,753] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:32,754] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:32,755] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:32,755] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:32,756] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:32,756] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:32,757] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:32,758] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:32,760] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:32,761] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:32,763] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:32,764] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:32,764] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:32,765] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:33,818] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:12:33,818] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:12:33,820] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:12:33,823] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:12:33,824] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:33,824] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:12:33,825] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:33,826] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:12:33,826] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:12:33,828] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:12:33,830] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:12:33,830] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:33,830] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:12:33,831] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:34,474] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:34,475] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:34,477] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:34,479] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,480] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,481] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,482] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,484] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,485] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:34,486] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:34,486] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:34,487] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:34,488] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:34,489] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:34,490] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:34,493] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,495] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,495] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,497] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,499] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:34,499] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:34,501] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:34,501] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:34,501] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:36,082] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:12:36,082] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:12:36,085] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:12:36,087] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:12:36,087] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:36,087] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:12:36,088] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:36,089] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:12:36,089] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:12:36,091] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:12:36,093] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:12:36,095] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:36,097] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:12:36,098] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:36,821] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:36,821] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:36,825] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:36,827] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:36,828] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:36,828] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:36,829] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:36,829] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:36,830] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:36,830] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:36,833] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:36,834] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:36,835] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:36,835] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:36,836] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:36,836] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:37,528] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:37,528] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:37,528] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:37,528] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:37,528] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:37,528] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:37,530] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:37,530] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:37,530] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:37,532] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:37,532] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:37,533] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:37,533] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,533] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:37,535] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:37,535] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:37,535] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,535] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:37,536] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,536] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:37,536] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:37,537] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:37,537] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:37,537] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,537] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:37,539] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,539] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:37,539] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:37,539] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:37,539] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:37,539] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:37,540] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:37,540] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:37,540] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:37,540] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:37,541] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:37,542] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:37,542] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:37,542] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:37,542] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:37,542] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:37,542] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:37,542] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:37,544] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:37,545] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:37,545] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:37,546] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:37,547] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:37,547] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,548] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:37,548] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,548] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:37,548] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,549] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:37,549] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,550] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:37,551] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:37,551] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:37,561] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:37,561] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:37,561] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:37,561] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:37,562] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:37,562] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:39,366] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:39,366] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:39,368] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:39,370] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:39,371] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:39,371] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:39,372] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:39,372] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:39,373] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:39,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:39,376] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:39,377] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:39,379] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:39,379] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:39,379] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:39,380] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:39,898] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:12:39,898] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:12:39,900] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:12:39,902] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:12:39,902] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:39,903] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:12:39,903] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:39,904] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:12:39,905] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:12:39,907] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:12:39,908] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:12:39,908] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:39,908] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:12:39,909] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:56,455] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:56,455] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:56,455] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:56,455] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:56,456] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:56,456] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:56,458] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:56,458] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:56,458] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:56,460] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:56,460] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:56,461] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:56,461] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,461] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:56,462] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:56,462] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:56,462] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,462] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:56,462] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:56,463] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,463] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:56,463] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:56,463] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,464] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:12:56,464] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:12:56,465] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,465] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:56,465] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:56,465] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:56,466] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:56,466] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:56,466] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:56,466] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:56,467] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:56,467] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:12:56,467] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:12:56,468] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:12:56,468] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:12:56,468] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:12:56,468] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:12:56,470] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:12:56,470] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:12:56,470] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:12:56,471] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:56,471] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:12:56,471] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:56,471] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:56,472] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:56,472] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,473] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:12:56,474] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:56,474] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,475] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:12:56,475] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,476] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,477] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:12:56,477] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:56,477] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:12:56,477] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:12:56,478] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:12:56,478] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:12:56,480] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:12:56,480] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:12:56,480] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:14:39,769] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/rentals", parameters={}
[2025-06-23 15:14:39,769] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:14:39,769] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmntuicx71bpss2jzav.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars", parameters={}
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users", parameters={}
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmntuicx71bpss2jzav.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmntuicx71bpss2jzav.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:14:39,770] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:14:39,771] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:14:39,771] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmntuicx71bpss2jzav.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmntuicx71bpss2jzav.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmntuicx71bpss2jzav.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:14:39,772] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:14:39,773] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:18:19,327] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:19,327] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:19,327] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:19,327] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:19,327] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:19,327] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:19,330] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:19,330] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:19,330] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:19,331] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,331] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:19,332] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,332] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,332] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:19,332] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,333] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,333] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,333] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:19,333] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,333] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,334] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,334] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,334] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,335] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:19,336] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:19,336] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,337] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:19,337] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,337] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:19,337] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:19,337] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,338] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:19,338] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,338] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,338] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:19,339] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:19,340] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:19,340] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:19,340] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:19,340] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:19,341] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:19,341] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,341] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:19,341] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:19,341] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:19,342] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,343] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,344] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,344] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,346] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,346] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,346] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,346] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,347] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,347] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,348] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,349] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:19,349] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,350] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:19,350] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:19,350] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,350] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:19,350] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:19,350] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,351] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:19,351] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,353] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:19,353] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:19,354] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:19,354] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:19,354] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:19,355] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:19,355] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:19,355] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:19,356] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,357] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:19,357] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,357] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,357] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,357] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:19,359] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,359] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,359] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,360] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,360] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,360] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:19,361] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:19,361] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,361] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,362] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,363] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:19,363] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:19,363] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,363] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:19,363] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:19,363] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,363] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:19,365] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:19,365] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,365] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,366] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:19,366] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:19,367] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,367] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:19,367] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:19,367] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:19,368] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,368] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:19,370] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:19,371] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:19,371] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,372] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,372] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,373] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:19,373] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,374] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,374] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,375] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:19,375] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,377] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:19,378] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:19,378] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:19,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:19,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:19,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:19,379] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:19,379] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:24,380] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:24,381] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:24,381] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:24,382] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:24,382] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:24,382] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:24,384] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:24,385] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:24,385] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:24,386] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:24,386] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:24,387] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,387] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:24,388] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:24,388] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:24,388] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:24,389] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,389] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:24,389] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:24,392] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:24,392] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,393] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:24,393] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:24,394] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:24,394] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,395] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,396] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:24,396] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:24,396] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:24,396] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:24,397] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:24,397] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:24,397] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:24,397] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:24,397] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:24,397] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:24,400] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:24,401] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:24,401] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:24,401] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:24,401] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:24,401] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:24,401] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:24,402] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:24,404] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:24,404] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:24,405] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:24,407] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,409] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:24,410] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,411] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,411] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:24,413] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:24,413] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,416] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:24,416] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:24,417] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:24,417] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:24,418] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:24,419] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:24,419] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:24,419] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:24,419] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:24,421] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:30,099] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:30,099] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:30,099] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:30,100] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:30,100] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:30,100] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:30,103] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:30,103] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:30,103] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:30,105] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:30,105] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:30,105] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,106] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:30,106] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:30,107] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:30,107] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,107] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:30,107] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:30,107] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:30,107] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,108] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:30,108] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:30,108] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,111] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:30,111] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:30,111] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,112] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:30,112] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:30,112] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:30,112] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:30,113] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:30,113] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:30,113] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:30,114] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:30,115] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:30,115] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:30,115] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:30,115] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:30,117] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:30,117] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:30,117] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:30,117] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:30,117] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:30,118] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:30,118] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:30,119] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:30,119] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,119] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:30,121] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:30,121] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,121] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:30,122] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,122] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:30,122] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,122] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:30,123] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:30,123] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:30,123] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:30,124] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:30,124] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:30,124] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:30,124] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:30,124] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:30,124] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:31,758] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:31,759] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:31,761] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:31,763] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:31,764] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:31,764] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:31,764] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:31,765] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:31,765] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:31,766] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:31,767] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:31,768] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:31,771] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:31,771] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:31,771] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:31,772] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:32,492] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:32,492] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:32,494] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:32,496] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:32,496] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:32,496] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:32,497] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:32,498] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:32,498] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:32,501] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:32,503] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:32,503] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:32,503] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:32,504] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:33,381] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:33,382] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:33,384] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:33,385] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,386] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,387] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,388] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,389] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,389] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:33,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:33,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:33,391] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:33,392] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:33,392] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:33,394] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:33,397] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,399] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,400] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,401] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,403] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:33,403] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:33,405] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:33,405] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:33,406] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:34,756] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:34,756] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:34,758] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:34,760] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:34,760] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:34,760] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:34,761] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:34,763] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:34,763] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:34,765] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:34,767] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:34,767] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:34,767] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:34,768] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,438] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:35,438] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:35,438] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:35,438] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:35,438] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:35,438] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:35,441] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:35,441] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:35,441] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:35,441] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:35,441] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:35,442] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:35,443] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,443] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:35,443] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:35,444] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:35,444] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,444] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,444] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:35,445] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:35,445] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,445] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,446] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,446] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:35,446] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:35,447] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,447] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:35,447] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:35,447] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,447] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,449] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:35,449] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,449] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:35,450] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:35,450] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:35,450] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:35,450] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,451] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:35,452] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:35,452] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:35,452] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:35,453] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:35,453] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,453] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:35,453] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:35,454] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,454] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:35,454] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:35,455] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:35,455] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:35,455] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,456] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,456] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:35,456] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,457] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,457] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:35,458] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,458] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:35,458] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:35,458] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,459] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:35,459] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,459] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:35,461] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,909] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:35,909] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:35,912] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:35,913] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:35,914] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:35,914] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,915] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:35,915] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:35,916] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:35,916] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:35,920] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:35,921] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:35,922] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:35,923] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:35,923] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:35,924] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:36,715] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:36,715] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:36,717] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:36,719] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:36,720] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:36,720] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:36,720] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:36,722] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:36,722] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:36,725] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:36,727] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:36,727] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:36,727] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:36,728] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:37,108] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:37,109] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:37,111] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:37,113] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,116] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,116] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,117] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,118] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,119] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:37,120] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:37,120] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:37,121] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:37,121] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:37,121] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:37,123] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:37,126] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,128] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,129] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,130] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,131] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:37,132] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:37,133] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:37,133] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:37,133] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:38,384] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:38,384] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:38,384] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:38,384] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:38,384] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:38,384] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:38,387] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:38,387] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:38,387] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:38,389] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:38,389] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:38,390] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:38,390] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,390] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:38,391] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:38,391] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:38,391] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:38,391] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,392] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,392] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:38,392] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:38,393] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:38,394] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:38,394] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:38,395] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:38,395] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:38,395] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:38,396] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:38,396] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:38,397] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:38,397] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,398] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:38,398] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:38,399] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,399] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:38,399] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:38,399] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:38,399] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:38,399] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:38,399] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:38,400] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:38,400] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:38,400] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:38,401] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:38,402] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:38,402] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:38,402] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:38,404] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:38,405] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:38,405] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:38,405] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:38,406] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,406] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:38,406] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:38,407] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:38,407] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,407] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:38,408] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,410] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,411] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:38,411] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:38,412] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:38,412] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:38,413] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:39,638] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:39,639] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:39,641] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:39,642] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:39,644] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:39,645] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:39,645] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:39,646] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:39,647] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:39,647] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:39,649] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:39,649] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:39,651] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:39,651] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:39,652] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:39,652] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:40,107] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:40,107] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:40,109] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:40,112] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:40,112] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:40,112] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:40,113] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:40,114] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:40,115] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:40,117] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:40,118] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:40,118] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:40,118] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:40,119] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:40,524] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:40,524] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:40,526] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:40,528] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,529] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,531] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,532] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,533] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,533] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:40,534] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:40,534] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:40,535] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:40,537] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:40,537] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:40,539] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:40,540] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,541] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,542] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,543] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,545] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:40,546] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:40,546] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:40,546] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:40,547] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:41,251] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:41,251] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:41,254] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:41,256] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:41,256] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:41,256] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:41,257] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:41,259] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:18:41,259] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:18:41,261] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:18:41,262] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:18:41,262] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:41,263] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:18:41,263] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:41,694] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:41,694] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:41,696] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:41,697] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:41,698] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:41,699] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:41,699] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:41,699] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:41,701] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:41,701] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:41,703] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:41,704] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:41,705] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:41,705] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:41,705] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:41,706] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:42,414] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:42,414] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:42,414] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:42,414] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:42,414] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:42,414] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:42,416] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:42,416] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:42,416] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:42,417] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:42,417] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:42,418] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:42,418] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,418] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:42,418] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:42,419] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:42,419] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:42,419] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,419] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:42,419] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,419] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:42,419] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:42,421] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,421] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:42,422] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:42,422] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:18:42,422] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,422] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:42,422] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:18:42,423] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:42,423] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:42,423] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:42,423] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:42,424] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:42,424] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:18:42,424] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:18:42,424] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:18:42,424] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:18:42,424] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:18:42,424] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:18:42,427] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:18:42,427] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:18:42,427] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:18:42,427] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:42,427] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:18:42,427] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:42,428] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:42,428] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:42,429] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,429] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:18:42,429] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:42,429] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,430] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:18:42,430] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,430] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,432] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:18:42,432] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:18:42,432] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:42,432] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:18:42,432] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:18:42,432] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:18:42,433] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:18:42,433] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:18:42,433] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:12,728] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:12,728] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:12,731] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:12,732] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:12,734] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:12,734] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:12,735] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:12,736] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:12,737] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:12,737] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:12,739] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:12,740] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:12,741] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:12,742] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:12,742] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:12,744] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:14,236] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:14,236] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:14,239] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:14,241] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:14,241] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:14,241] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:14,242] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:14,243] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:14,243] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:14,245] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:14,246] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:14,247] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:14,247] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:14,248] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:14,860] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:14,861] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:14,862] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:14,865] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,867] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,867] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,868] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,869] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,870] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:14,870] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:14,870] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:14,871] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:14,872] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:14,872] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:14,874] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:14,876] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,877] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,878] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,878] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,879] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:14,881] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:14,881] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:14,881] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:14,881] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:15,604] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:15,604] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:15,606] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:15,608] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:15,608] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:15,609] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:15,609] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:15,611] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:15,611] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:15,613] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:15,615] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:15,615] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:15,615] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:15,616] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:15,935] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:15,935] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:15,938] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:15,938] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:15,940] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:15,941] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:15,941] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:15,941] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:15,942] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:15,943] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:15,945] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:15,946] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:15,947] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:15,947] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:15,947] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:15,948] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:16,367] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:16,367] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:16,367] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:19:16,367] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:16,367] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:19:16,367] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:16,369] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:16,369] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:16,370] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:16,372] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,372] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:16,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:16,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:16,373] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,374] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:16,374] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,375] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:16,375] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:16,376] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,376] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,377] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:16,377] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:16,377] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:16,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:16,378] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:16,378] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:16,379] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:16,379] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:16,380] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:16,380] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:19:16,380] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:16,380] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:16,380] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:16,381] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:16,381] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:16,382] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:16,382] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:16,382] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:16,383] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:16,383] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,384] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:19:16,384] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,384] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:16,385] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:19:16,385] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,385] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:16,387] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,388] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:19:16,388] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:19:16,389] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:16,389] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:16,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:16,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:16,390] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:19:16,390] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:16,391] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:16,391] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:16,392] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:16,392] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:16,393] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:16,394] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:19:16,394] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:16,394] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:19:16,395] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:17,438] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:17,439] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:17,442] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:17,442] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:17,444] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:17,444] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:17,444] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:17,445] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:17,451] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:17,451] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:17,454] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:17,454] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:17,455] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:17,456] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:17,456] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:17,456] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:18,347] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:18,348] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:18,351] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:18,352] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:18,354] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:18,354] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:18,354] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:18,355] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:18,355] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:18,358] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:18,359] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:18,359] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:18,359] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:18,360] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:24,969] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/brands/53", parameters={}
[2025-06-23 15:19:24,970] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:19:24,970] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:24,972] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/brands/53", parameters={}
[2025-06-23 15:19:24,973] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:19:24,978] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:24,982] DEBUG org.hibernate.SQL - delete from brand where id=?
[2025-06-23 15:19:24,989] INFO  com.example.order_service.service.BrandServiceImpl - Xoá thương hiệu có ID: 53 thành công
[2025-06-23 15:19:24,989] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:24,990] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:19:24,990] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:24,993] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:24,993] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:24,995] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:24,998] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:24,998] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:24,998] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:24,999] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:27,633] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/brands/152", parameters={}
[2025-06-23 15:19:27,633] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:19:27,634] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:27,635] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/brands/152", parameters={}
[2025-06-23 15:19:27,635] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:19:27,637] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:27,640] DEBUG org.hibernate.SQL - delete from brand where id=?
[2025-06-23 15:19:27,643] INFO  com.example.order_service.service.BrandServiceImpl - Xoá thương hiệu có ID: 152 thành công
[2025-06-23 15:19:27,645] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:27,645] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:19:27,645] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:27,647] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:27,648] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:27,650] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:27,651] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:27,651] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:27,651] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:27,652] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:29,593] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/brands/102", parameters={}
[2025-06-23 15:19:29,593] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:19:29,593] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:29,595] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/brands/102", parameters={}
[2025-06-23 15:19:29,596] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:19:29,599] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:29,602] DEBUG org.hibernate.SQL - delete from brand where id=?
[2025-06-23 15:19:29,608] INFO  com.example.order_service.service.BrandServiceImpl - Xoá thương hiệu có ID: 102 thành công
[2025-06-23 15:19:29,608] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:29,609] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:19:29,609] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:29,613] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:29,613] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:29,615] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:29,616] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:29,617] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:29,617] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:29,618] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:30,589] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:30,589] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:30,591] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:30,593] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,595] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,596] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,597] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,598] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,599] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:30,599] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:30,599] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:30,600] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:30,602] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:30,602] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:30,603] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:30,605] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,607] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,607] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,608] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,608] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:30,609] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:30,609] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:30,609] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:30,610] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:36,484] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users", parameters={}
[2025-06-23 15:19:36,484] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:19:36,485] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:36,487] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:19:36,487] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:19:36,488] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@b886050]
[2025-06-23 15:19:36,490] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:19:36,492] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:19:36,495] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:19:36,496] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:36,496] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=v]]
[2025-06-23 15:19:36,497] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:36,499] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:36,499] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:36,500] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:36,502] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:36,504] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:36,504] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:36,504] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:36,505] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:36,505] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:36,507] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:36,507] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:36,507] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:36,508] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:40,585] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:19:40,585] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:19:40,586] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@64e07bda]
[2025-06-23 15:19:40,588] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:19:40,590] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:19:40,592] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:19:40,593] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:40,593] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=bbb]]
[2025-06-23 15:19:40,594] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:40,597] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:40,597] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:40,599] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:40,601] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:40,602] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:40,603] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:40,606] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:40,608] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:40,609] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:40,609] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:40,610] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:40,610] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:40,610] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:40,611] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:43,571] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:19:43,571] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:19:43,572] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@17e33d69]
[2025-06-23 15:19:43,573] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:19:43,576] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:19:43,590] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:19:43,590] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:43,590] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=nnn]]
[2025-06-23 15:19:43,591] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:43,593] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:43,593] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:43,595] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:43,596] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,597] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,598] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,598] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,599] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,600] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,600] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,602] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:43,603] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:43,603] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:43,604] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:43,605] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:54,637] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:54,638] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:54,640] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:54,641] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:54,641] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:54,642] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:54,643] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:54,663] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:54,663] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:54,665] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:54,667] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:54,667] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:54,667] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:54,667] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:55,384] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:55,384] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:55,387] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:55,388] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:55,389] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:55,389] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:55,389] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:55,390] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:55,391] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:55,391] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:55,393] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:55,394] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:55,395] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:55,396] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:55,396] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:55,397] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:57,929] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:57,929] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:19:57,929] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:57,929] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:19:57,929] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:57,929] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:57,932] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:57,932] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:57,932] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:19:57,932] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:57,932] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:57,933] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:57,933] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,933] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:57,933] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:57,934] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,934] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:57,934] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:57,934] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:57,935] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,935] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:57,935] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:57,935] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,936] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:19:57,937] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:57,937] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,937] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:19:57,937] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:57,937] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:57,937] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:57,937] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,938] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,939] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:19:57,939] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,939] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:19:57,940] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:57,940] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:57,940] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:57,941] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:57,941] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:57,941] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:19:57,941] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:57,942] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:57,942] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:57,943] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:57,940] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:57,943] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:57,944] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:57,944] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:57,944] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:57,944] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:57,944] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:57,944] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:57,945] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:57,945] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,945] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:19:57,946] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:57,946] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:19:57,946] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,946] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:57,947] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,947] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,949] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,949] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,950] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,950] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:57,951] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:57,951] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:57,951] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:57,951] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:58,696] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:58,696] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:58,698] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:58,699] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:58,700] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:58,701] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:58,701] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:58,701] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:58,703] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:58,703] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:58,705] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:58,706] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:58,707] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:58,707] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:58,707] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:58,707] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,308] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:59,310] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:59,311] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:59,313] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:59,313] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,314] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:59,314] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,315] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:19:59,317] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:19:59,319] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:19:59,320] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:19:59,320] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,320] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:19:59,321] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,895] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:19:59,895] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:59,895] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:59,896] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:59,896] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:59,896] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:19:59,898] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:59,898] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:19:59,898] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:59,899] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:59,899] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:59,899] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:59,899] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,900] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:59,900] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:59,900] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,900] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:59,900] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:59,900] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,901] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,901] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,901] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:59,901] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,903] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:19:59,903] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:19:59,903] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:19:59,903] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,903] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,903] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:19:59,904] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,904] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,905] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,905] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:19:59,905] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,905] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:19:59,905] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:19:59,905] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:19:59,907] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:59,907] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,907] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:59,907] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:19:59,908] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,908] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,908] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:19:59,908] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,908] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:19:59,909] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:19:59,909] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:19:59,910] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:59,910] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:59,911] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:19:59,911] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:19:59,911] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:59,912] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:19:59,912] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,913] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,913] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:19:59,913] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,913] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:19:59,913] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,914] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:19:59,914] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,915] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,915] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,915] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,916] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:19:59,916] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:19:59,916] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:19:59,918] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:19:59,918] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:21:38,187] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users", parameters={}
[2025-06-23 15:21:38,188] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:21:38,187] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars", parameters={}
[2025-06-23 15:21:38,187] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/rentals", parameters={}
[2025-06-23 15:21:38,188] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:21:38,188] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:21:38,188] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmpsodx9w55q823sepg.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:21:38,188] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmpsodx9w55q823sepg.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:21:38,188] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmpsodx9w55q823sepg.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:21:38,188] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:21:38,190] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:21:38,190] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:21:38,190] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:21:38,190] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:21:38,191] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmpsodx9w55q823sepg.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:21:38,191] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:21:38,192] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:21:38,192] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:21:38,192] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:21:38,193] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:21:38,193] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmpsodx9w55q823sepg.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:21:38,193] DEBUG org.springframework.web.cors.DefaultCorsProcessor - Reject: 'https://kzmpsodx9w55q823sepg.lite.vusercontent.net' origin is not allowed
[2025-06-23 15:21:38,193] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:21:38,193] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
[2025-06-23 15:44:21,365] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:44:21,365] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:44:21,365] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:21,366] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:21,366] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:44:21,366] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:44:21,373] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:21,373] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:44:21,373] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:44:21,381] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:44:21,381] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:21,383] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,383] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:21,384] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:44:21,384] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:21,384] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:21,384] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:44:21,385] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:21,385] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,385] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:21,386] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,386] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:21,386] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,386] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:44:21,387] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:21,387] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:44:21,387] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:44:21,387] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:44:21,387] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,387] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:21,389] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,390] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,390] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,390] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:44:21,390] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:44:21,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:44:21,390] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:21,390] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:44:21,391] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:21,391] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:21,391] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:21,392] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:44:21,392] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:21,392] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:44:21,392] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:44:21,392] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:21,394] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:21,394] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:21,394] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:21,395] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:21,396] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:21,396] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:21,396] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:21,396] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:21,397] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,397] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:44:21,398] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:21,398] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:44:21,398] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,398] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:21,398] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,399] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,400] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,400] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,401] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,401] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:21,402] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:21,402] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:21,402] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:21,403] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:26,353] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:44:26,353] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:44:26,354] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:26,354] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:44:26,355] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:26,355] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:44:26,357] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:44:26,357] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:44:26,357] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:26,358] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:44:26,358] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:26,359] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:26,359] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,360] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:44:26,360] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:26,360] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:26,360] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:44:26,361] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:26,361] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,361] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:26,362] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,362] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:26,363] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:44:26,363] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,363] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:44:26,364] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:44:26,365] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:26,365] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:44:26,365] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,366] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:26,366] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:44:26,366] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,368] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,368] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:44:26,368] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:44:26,369] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:44:26,369] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,372] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:26,372] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:26,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:26,373] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:44:26,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:26,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:44:26,373] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:26,373] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:26,374] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:44:26,374] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:26,374] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:26,375] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:26,375] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:26,375] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:44:26,376] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:26,376] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:26,377] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:44:26,378] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:44:26,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:26,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:44:26,379] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,380] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:26,383] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,383] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,384] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,386] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,387] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,387] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,388] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:26,388] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:26,389] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:26,389] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:26,390] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:29,381] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:29,382] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:29,384] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:29,385] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,387] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,388] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,389] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,390] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,390] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,391] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,393] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,394] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:29,395] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:29,395] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:29,396] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:29,398] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:29,398] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:29,401] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:29,403] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,404] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,405] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,406] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,407] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,407] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,407] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,408] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:29,408] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:29,408] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:29,409] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:29,410] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:34,930] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:44:34,930] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:44:34,932] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@533f8956]
[2025-06-23 15:44:34,933] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:44:34,935] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:44:34,940] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:44:34,940] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:34,940] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=FFFF]]
[2025-06-23 15:44:34,942] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:34,945] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:34,945] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:34,947] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:34,949] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,950] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,951] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,951] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,952] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,952] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,953] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,954] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,954] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:34,955] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:34,955] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:34,956] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:34,957] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:38,840] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:44:38,840] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:44:38,842] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@371fc852]
[2025-06-23 15:44:38,843] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:44:38,845] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:44:38,848] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:44:38,848] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:38,848] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=FFFFFF]]
[2025-06-23 15:44:38,849] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:38,856] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:38,856] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:38,858] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:38,859] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,860] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,861] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,861] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,862] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,863] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,863] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,864] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,864] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,864] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:38,865] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:38,865] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:38,866] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:38,867] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:46,664] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:44:46,665] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:44:46,666] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@7ae696d1]
[2025-06-23 15:44:46,666] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:44:46,669] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:44:46,672] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:44:46,672] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:46,672] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=GGGG]]
[2025-06-23 15:44:46,673] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:46,678] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:46,678] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:46,680] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:46,682] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,682] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,684] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,685] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,685] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,686] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,686] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,687] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,688] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,688] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,689] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:46,689] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:46,689] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:46,690] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:46,690] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:49,793] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:44:49,793] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:44:49,794] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@36f1edc0]
[2025-06-23 15:44:49,794] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:44:49,797] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:44:49,810] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:44:49,811] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:49,811] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=JJ]]
[2025-06-23 15:44:49,811] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:49,815] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:49,815] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:49,817] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:49,818] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,819] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,819] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,820] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,821] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,822] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,822] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,822] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,823] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,823] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,824] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,824] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:49,825] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:49,825] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:49,825] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:49,826] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:53,280] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:44:53,280] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:44:53,281] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@50969b1b]
[2025-06-23 15:44:53,283] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:44:53,284] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:44:53,297] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:44:53,298] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:53,298] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=HH]]
[2025-06-23 15:44:53,298] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:53,301] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:53,301] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:53,303] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:53,304] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,306] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,306] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,308] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,309] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,309] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,310] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,310] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,310] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,311] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,311] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,312] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,312] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:53,312] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:53,313] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:53,313] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:53,314] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:56,033] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:44:56,034] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:44:56,034] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@4b43b615]
[2025-06-23 15:44:56,035] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:44:56,038] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:44:56,041] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:44:56,041] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:56,041] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=NN]]
[2025-06-23 15:44:56,042] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:44:56,048] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:44:56,048] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:44:56,050] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:44:56,052] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,053] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,053] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,053] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,054] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,055] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,055] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,056] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,056] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,056] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,057] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,057] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,058] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,058] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:44:56,058] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:44:56,058] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:44:56,058] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:44:56,059] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:45,318] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:46:45,318] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:46:45,319] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:46:45,319] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:46:45,319] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:46:45,320] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:46:45,321] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:46:45,321] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:46:45,321] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:46:45,322] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:46:45,322] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:46:45,324] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:46:45,324] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,324] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:46:45,324] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:46:45,325] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:45,325] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:46:45,325] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:46:45,325] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,326] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:46:45,326] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,326] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:45,327] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,327] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:46:45,328] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:45,328] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:46:45,328] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,328] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:46:45,328] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:46:45,328] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:45,329] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,329] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,330] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:46:45,330] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:46:45,330] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:46:45,335] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,335] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:46:45,337] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,338] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,338] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:46:45,338] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:46:45,338] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,340] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:46:45,340] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:45,340] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:46:45,340] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,340] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:46:45,341] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:45,341] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,341] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:46:45,342] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,342] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:46:45,342] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:46:45,342] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:46:45,342] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:45,342] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:46:45,343] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:45,344] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:46:45,344] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:45,344] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:46:45,345] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:45,345] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:46:45,345] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:46:45,348] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:46:45,350] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,351] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,351] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,352] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,353] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,353] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,354] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,355] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,355] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,356] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,357] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,357] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,358] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,359] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:45,359] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:46:45,359] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:45,360] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:46:45,360] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:51,819] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:46:51,819] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:46:51,821] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@15ff86d8]
[2025-06-23 15:46:51,822] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:46:51,840] ERROR com.example.order_service.service.UserServiceImpl - Tên người dùng đã tồn tại
[2025-06-23 15:46:51,842] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên người dùng đã tồn tại
[2025-06-23 15:46:51,843] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Tên người dùng đã tồn tại] with root cause
java.lang.RuntimeException: Tên người dùng đã tồn tại
	at com.example.order_service.service.UserServiceImpl.createUser(UserServiceImpl.java:42) ~[classes/:?]
	at com.example.order_service.controller.UserController.createUser(UserController.java:35) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 15:46:51,849] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
[2025-06-23 15:46:51,849] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 15:46:51,850] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:51,853] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 15:46:51 ICT 2025, status=500, error=Internal Server Error, trace=java.lang.Ru (truncated)...]
[2025-06-23 15:46:51,854] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 15:46:55,084] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:46:55,084] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:46:55,085] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@18d95cef]
[2025-06-23 15:46:55,086] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:46:55,087] ERROR com.example.order_service.service.UserServiceImpl - Tên người dùng đã tồn tại
[2025-06-23 15:46:55,090] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên người dùng đã tồn tại
[2025-06-23 15:46:55,090] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Tên người dùng đã tồn tại] with root cause
java.lang.RuntimeException: Tên người dùng đã tồn tại
	at com.example.order_service.service.UserServiceImpl.createUser(UserServiceImpl.java:42) ~[classes/:?]
	at com.example.order_service.controller.UserController.createUser(UserController.java:35) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 15:46:55,091] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
[2025-06-23 15:46:55,091] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 15:46:55,093] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:55,093] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 15:46:55 ICT 2025, status=500, error=Internal Server Error, trace=java.lang.Ru (truncated)...]
[2025-06-23 15:46:55,094] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 15:46:56,035] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:46:56,035] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:46:56,036] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@1105f7ab]
[2025-06-23 15:46:56,038] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:46:56,038] ERROR com.example.order_service.service.UserServiceImpl - Tên người dùng đã tồn tại
[2025-06-23 15:46:56,040] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên người dùng đã tồn tại
[2025-06-23 15:46:56,040] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Tên người dùng đã tồn tại] with root cause
java.lang.RuntimeException: Tên người dùng đã tồn tại
	at com.example.order_service.service.UserServiceImpl.createUser(UserServiceImpl.java:42) ~[classes/:?]
	at com.example.order_service.controller.UserController.createUser(UserController.java:35) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 15:46:56,041] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
[2025-06-23 15:46:56,041] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 15:46:56,042] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:56,042] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 15:46:56 ICT 2025, status=500, error=Internal Server Error, trace=java.lang.Ru (truncated)...]
[2025-06-23 15:46:56,043] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 15:46:56,244] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:46:56,245] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:46:56,246] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@d215c3b]
[2025-06-23 15:46:56,247] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:46:56,248] ERROR com.example.order_service.service.UserServiceImpl - Tên người dùng đã tồn tại
[2025-06-23 15:46:56,248] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên người dùng đã tồn tại
[2025-06-23 15:46:56,249] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Tên người dùng đã tồn tại] with root cause
java.lang.RuntimeException: Tên người dùng đã tồn tại
	at com.example.order_service.service.UserServiceImpl.createUser(UserServiceImpl.java:42) ~[classes/:?]
	at com.example.order_service.controller.UserController.createUser(UserController.java:35) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 15:46:56,249] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
[2025-06-23 15:46:56,250] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 15:46:56,251] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:56,251] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 15:46:56 ICT 2025, status=500, error=Internal Server Error, trace=java.lang.Ru (truncated)...]
[2025-06-23 15:46:56,252] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 15:46:58,755] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:46:58,755] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:46:58,757] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@1d4330e]
[2025-06-23 15:46:58,758] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:46:58,760] DEBUG org.hibernate.SQL - insert into user (password,user_name,id) values (?,?,?)
[2025-06-23 15:46:58,764] INFO  com.example.order_service.service.UserServiceImpl - Tạo người dùng thành công
[2025-06-23 15:46:58,765] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:58,765] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateUserResponse[userName=HHKKKK]]
[2025-06-23 15:46:58,765] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:46:58,772] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:46:58,772] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:46:58,775] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:46:58,776] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,777] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,778] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,779] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,779] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,780] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,780] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,780] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,781] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,781] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,781] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,782] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,782] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,783] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,783] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:46:58,783] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:46:58,783] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:46:58,783] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:46:58,784] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:02,668] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users/115", parameters={}
[2025-06-23 15:47:02,668] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:47:02,669] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:02,670] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/users/115", parameters={}
[2025-06-23 15:47:02,670] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:47:02,672] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:02,673] DEBUG org.hibernate.SQL - delete from user where id=?
[2025-06-23 15:47:02,688] INFO  com.example.order_service.service.UserServiceImpl - Xoá thành công người dùng có ID: 115
[2025-06-23 15:47:02,688] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:02,688] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:47:02,689] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:02,691] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:02,691] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:02,694] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:02,695] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,696] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,697] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,697] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,698] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,698] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,699] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,699] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,699] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,700] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,700] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,701] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,701] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,701] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:02,702] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:02,702] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:02,702] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:02,703] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:05,971] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users/114", parameters={}
[2025-06-23 15:47:05,972] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:47:05,972] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:05,973] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/users/114", parameters={}
[2025-06-23 15:47:05,973] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#deleteUser(int)
[2025-06-23 15:47:05,975] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:05,977] DEBUG org.hibernate.SQL - delete from user where id=?
[2025-06-23 15:47:05,981] INFO  com.example.order_service.service.UserServiceImpl - Xoá thành công người dùng có ID: 114
[2025-06-23 15:47:05,981] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:05,981] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:47:05,981] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:05,989] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:05,989] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:05,991] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:05,993] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,994] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,994] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,995] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,995] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,996] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,996] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,997] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,997] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,998] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,998] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,998] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,999] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:05,999] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:06,000] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:06,000] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:06,000] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:07,856] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:07,857] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:07,859] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:07,860] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:07,861] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:07,861] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:07,861] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:07,863] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:07,863] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:07,865] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:07,867] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:07,867] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:07,867] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:07,868] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:12,093] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/brands", parameters={}
[2025-06-23 15:47:12,093] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#createBrand(CreateBrandRequest)
[2025-06-23 15:47:12,093] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:12,095] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/brands", parameters={}
[2025-06-23 15:47:12,095] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#createBrand(CreateBrandRequest)
[2025-06-23 15:47:12,101] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateBrandRequest@69de4673]
[2025-06-23 15:47:12,104] DEBUG org.hibernate.SQL - select b1_0.id from brand b1_0 where b1_0.name=? limit ?
[2025-06-23 15:47:12,107] DEBUG org.hibernate.SQL - select next_val as id_val from brand_seq for update
[2025-06-23 15:47:12,125] DEBUG org.hibernate.SQL - update brand_seq set next_val= ? where next_val=?
[2025-06-23 15:47:12,132] DEBUG org.hibernate.SQL - insert into brand (country,name,id) values (?,?,?)
[2025-06-23 15:47:12,134] INFO  com.example.order_service.service.BrandServiceImpl - Thêm thương hiệu J của quốc gia J thành công
[2025-06-23 15:47:12,136] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:12,137] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateBrandResponse[brand=J, country=J]]
[2025-06-23 15:47:12,138] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:12,140] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:12,141] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:12,142] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:12,143] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:12,143] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:12,143] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:12,145] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:15,500] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/brands/202", parameters={}
[2025-06-23 15:47:15,501] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:47:15,501] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:15,502] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/api/v1/brands/202", parameters={}
[2025-06-23 15:47:15,503] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#deleteBrand(int)
[2025-06-23 15:47:15,505] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:15,519] DEBUG org.hibernate.SQL - delete from brand where id=?
[2025-06-23 15:47:15,521] INFO  com.example.order_service.service.BrandServiceImpl - Xoá thương hiệu có ID: 202 thành công
[2025-06-23 15:47:15,522] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:15,522] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Nothing to write: null body
[2025-06-23 15:47:15,522] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:15,524] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:15,525] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:15,526] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:15,527] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:15,528] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:15,528] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:15,528] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:16,442] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:16,442] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:16,445] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:16,446] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:16,447] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:16,447] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:16,447] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:16,448] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:16,449] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:16,449] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:16,451] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:16,452] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:16,453] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:16,454] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:16,454] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:16,455] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:21,278] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/cars", parameters={}
[2025-06-23 15:47:21,278] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#createCar(CreateCarRequest)
[2025-06-23 15:47:21,278] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:21,279] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/cars", parameters={}
[2025-06-23 15:47:21,279] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#createCar(CreateCarRequest)
[2025-06-23 15:47:21,285] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateCarRequest@26f41438]
[2025-06-23 15:47:21,287] DEBUG org.hibernate.SQL - select c1_0.id from car c1_0 where c1_0.model=? limit ?
[2025-06-23 15:47:21,289] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:21,291] ERROR com.example.order_service.service.CarServiceImpl - Không tìm thấy thương hiệu
[2025-06-23 15:47:21,291] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Brand not found
[2025-06-23 15:47:21,292] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Brand not found] with root cause
java.lang.RuntimeException: Brand not found
	at com.example.order_service.service.CarServiceImpl.lambda$createCar$0(CarServiceImpl.java:51) ~[classes/:?]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[?:?]
	at com.example.order_service.service.CarServiceImpl.createCar(CarServiceImpl.java:49) ~[classes/:?]
	at com.example.order_service.controller.CarController.createCar(CarController.java:43) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 15:47:21,292] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
[2025-06-23 15:47:21,293] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 15:47:21,293] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:21,293] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 15:47:21 ICT 2025, status=500, error=Internal Server Error, trace=java.lang.Ru (truncated)...]
[2025-06-23 15:47:21,294] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 15:47:24,772] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/cars", parameters={}
[2025-06-23 15:47:24,773] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#createCar(CreateCarRequest)
[2025-06-23 15:47:24,774] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateCarRequest@1e4aa570]
[2025-06-23 15:47:24,775] DEBUG org.hibernate.SQL - select c1_0.id from car c1_0 where c1_0.model=? limit ?
[2025-06-23 15:47:24,776] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:24,777] ERROR com.example.order_service.service.CarServiceImpl - Không tìm thấy thương hiệu
[2025-06-23 15:47:24,778] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Brand not found
[2025-06-23 15:47:24,778] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Brand not found] with root cause
java.lang.RuntimeException: Brand not found
	at com.example.order_service.service.CarServiceImpl.lambda$createCar$0(CarServiceImpl.java:51) ~[classes/:?]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[?:?]
	at com.example.order_service.service.CarServiceImpl.createCar(CarServiceImpl.java:49) ~[classes/:?]
	at com.example.order_service.controller.CarController.createCar(CarController.java:43) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 15:47:24,779] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
[2025-06-23 15:47:24,779] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 15:47:24,780] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:24,780] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 15:47:24 ICT 2025, status=500, error=Internal Server Error, trace=java.lang.Ru (truncated)...]
[2025-06-23 15:47:24,781] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 15:47:30,369] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:30,369] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:30,371] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:30,373] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:30,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:30,373] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:30,374] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:30,375] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:30,375] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:30,387] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:30,389] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:30,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:30,390] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:30,390] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:33,321] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:33,321] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:33,324] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:33,325] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:33,326] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:33,326] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:33,326] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:33,327] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:33,328] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:33,328] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:33,331] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:33,332] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:33,332] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:33,333] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:33,333] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:33,333] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:40,655] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/cars", parameters={}
[2025-06-23 15:47:40,655] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#createCar(CreateCarRequest)
[2025-06-23 15:47:40,656] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateCarRequest@16d6f20a]
[2025-06-23 15:47:40,657] DEBUG org.hibernate.SQL - select c1_0.id from car c1_0 where c1_0.model=? limit ?
[2025-06-23 15:47:40,659] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:40,661] DEBUG org.hibernate.SQL - select next_val as id_val from car_seq for update
[2025-06-23 15:47:40,674] DEBUG org.hibernate.SQL - update car_seq set next_val= ? where next_val=?
[2025-06-23 15:47:40,679] DEBUG org.hibernate.SQL - insert into car (amount,brand_id,model,price,id) values (?,?,?,?,?)
[2025-06-23 15:47:40,682] INFO  com.example.order_service.service.CarServiceImpl - Thêm xe thành công
[2025-06-23 15:47:40,684] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:40,689] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [CreateCarResponse[model=Nissan, price=2, amount=1, brand=Honda, country=Japannnnnêse]]
[2025-06-23 15:47:40,690] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:40,692] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:40,692] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:40,694] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:40,695] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:40,696] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:40,696] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:40,696] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:40,697] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:42,037] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:42,037] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:47:42,037] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:42,037] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:42,037] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:42,037] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:47:42,039] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:42,039] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:42,039] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:47:42,040] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:42,040] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:42,040] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:42,041] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,041] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:42,041] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:42,041] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:42,041] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:42,041] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:42,042] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:42,042] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,042] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:42,042] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,044] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:47:42,044] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:42,044] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:42,044] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:42,044] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:47:42,044] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,045] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:42,045] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,045] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:42,046] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:47:42,046] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:47:42,046] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,046] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:42,046] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,048] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,048] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:42,048] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:42,048] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:42,048] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:47:42,049] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,049] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:42,049] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,049] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:42,049] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,050] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:42,050] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,050] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:42,050] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,050] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:42,051] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:42,051] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:42,051] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:42,051] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:42,052] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:42,052] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:47:42,052] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:42,052] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:47:42,053] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:42,053] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:42,053] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:42,054] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:42,057] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,058] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,058] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,058] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,059] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,060] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,060] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,061] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,061] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,061] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,062] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,062] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,062] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:42,063] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:42,063] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:42,063] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:42,064] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:54,245] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:54,245] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:54,247] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:54,249] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:54,251] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:54,251] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:54,251] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:54,252] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:54,253] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:54,254] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:54,257] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:54,257] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:54,259] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:54,259] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:54,259] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:54,260] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:54,824] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:54,824] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:54,827] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:54,829] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:54,829] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:54,829] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:54,829] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:54,831] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:54,831] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:54,833] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:54,834] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:54,834] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:54,834] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:54,835] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:55,312] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:55,314] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:55,316] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:55,317] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,319] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,319] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,320] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,320] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,321] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,321] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,322] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,322] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,322] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,323] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,323] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,324] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,324] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:55,325] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:55,325] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:55,325] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:55,326] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:55,326] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:55,328] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:55,330] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,331] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,331] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,332] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,333] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,333] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,334] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,334] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,334] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,335] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,335] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,335] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,336] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:55,336] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:55,336] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:55,336] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:55,336] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,237] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:47:56,237] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:56,237] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:56,237] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:56,237] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:56,237] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:47:56,239] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:56,239] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:47:56,239] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:56,240] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:56,240] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:56,240] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:56,241] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,241] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:56,241] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:56,241] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,241] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:56,241] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:56,242] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,242] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,242] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:56,242] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,242] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,243] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:47:56,243] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:47:56,243] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:47:56,243] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,243] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:47:56,243] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,245] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,245] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,246] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,246] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:47:56,246] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:47:56,246] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,246] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:47:56,247] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:47:56,247] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,247] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,247] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,247] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:47:56,249] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,249] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,249] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:47:56,249] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:47:56,249] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,249] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:56,249] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,250] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:56,250] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:56,250] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,250] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:56,250] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,250] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:47:56,250] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:56,251] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:56,251] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:56,251] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:47:56,252] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:47:56,252] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,252] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:56,252] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:47:56,253] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,253] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,255] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,256] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,257] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,258] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,258] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,259] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,259] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,259] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,260] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,260] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,260] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,261] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:56,261] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:56,262] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,262] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:56,262] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,728] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:56,728] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:56,731] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:56,732] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:56,733] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,733] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:56,733] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:56,734] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:47:56,734] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:47:56,736] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:47:56,737] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:47:56,738] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:56,738] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:47:56,738] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:57,305] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:57,305] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:57,307] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:57,310] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,311] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,311] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,312] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,312] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,313] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,313] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,314] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,314] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,314] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,315] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,315] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,316] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,316] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:57,316] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:57,316] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:57,317] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:47:57,319] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:47:57,319] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:47:57,320] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:47:57,322] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,323] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,323] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,323] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,324] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,324] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,326] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,326] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,326] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,327] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,327] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,327] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,328] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:47:57,328] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:47:57,328] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:47:57,328] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:47:57,329] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:27,399] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:49:27,399] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:27,399] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:49:27,399] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:27,399] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:27,399] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:27,402] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:49:27,402] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:27,402] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:27,403] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:27,403] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:27,403] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:27,404] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,404] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:27,404] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:27,404] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:27,404] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:27,405] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:27,405] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,405] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:27,405] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,405] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:27,406] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,407] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:27,407] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:49:27,407] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:27,408] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:27,408] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:49:27,408] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,408] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:27,409] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,411] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:27,411] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:49:27,411] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:49:27,411] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,412] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,412] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:27,412] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,413] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,413] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:27,414] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:27,414] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,414] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:27,414] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:49:27,414] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,414] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:27,415] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,415] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:27,416] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:27,418] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:27,418] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:27,419] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:27,419] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:27,419] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:27,420] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:27,422] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:27,422] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:27,423] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:27,424] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:49:27,425] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:27,425] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:27,425] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:49:27,425] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:27,427] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,428] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,428] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,430] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,431] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,431] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,432] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,432] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,433] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,433] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,433] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,435] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,435] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:27,436] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:27,436] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:27,436] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:27,436] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:29,334] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:29,334] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:29,335] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:29,338] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,343] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,345] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,350] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,352] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,358] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,359] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,361] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,361] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,361] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,362] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,362] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,362] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,363] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:29,363] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:29,363] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:29,364] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:29,366] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:29,366] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:29,368] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:29,371] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,372] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,373] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,374] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,374] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,375] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,376] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,376] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,376] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,377] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,377] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,378] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,378] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:29,378] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:29,378] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:29,379] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:29,379] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:30,061] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:30,062] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:30,064] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:30,064] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:30,066] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:30,066] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:30,066] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:30,067] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:30,068] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:30,068] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:30,070] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:30,070] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:30,073] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:30,073] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:30,073] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:30,073] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:30,620] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:30,620] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:30,621] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:30,623] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,624] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,625] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,626] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,626] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,627] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,627] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,627] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,629] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,629] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,629] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,630] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,630] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,630] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:30,631] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:30,631] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:30,631] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:30,632] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:30,633] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:30,634] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:30,636] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,636] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,637] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,637] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,637] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,639] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,639] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,639] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,640] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,640] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,640] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,641] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,641] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:30,641] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:30,642] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:30,642] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:30,642] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:33,347] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:33,347] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:33,350] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:33,350] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:33,351] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:33,352] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:33,352] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:33,352] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:33,353] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:33,354] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:33,355] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:33,356] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:33,356] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:33,357] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:33,357] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:33,357] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:34,581] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:49:34,582] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:49:34,583] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:49:34,584] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:49:34,585] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:34,585] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:49:34,585] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:34,586] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:49:34,586] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:49:34,588] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:49:34,589] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:49:34,589] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:34,590] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:49:34,590] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:35,437] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:49:35,438] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:49:35,438] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:35,438] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:35,438] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:35,438] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:35,439] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:35,439] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:35,439] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:49:35,440] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:35,440] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:35,441] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:35,441] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,441] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:35,441] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:35,441] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:35,441] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:35,441] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,441] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:35,443] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:35,443] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,443] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:35,443] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,444] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:35,444] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:49:35,444] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:35,444] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:35,444] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,444] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:49:35,445] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:35,445] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,445] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,446] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,446] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:35,446] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:49:35,446] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,447] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:49:35,447] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:35,447] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,447] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,447] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,449] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:35,449] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:35,449] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,449] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:49:35,449] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:35,449] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:35,450] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:35,450] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:35,450] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:35,450] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:35,450] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:35,450] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:35,451] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:49:35,451] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:35,451] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:35,451] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:35,452] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:49:35,453] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:35,453] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:49:35,453] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:35,453] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:49:35,453] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:35,454] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,455] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,455] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,456] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,457] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,457] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,457] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,457] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,458] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,458] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,459] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,459] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,459] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:35,460] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:35,460] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:35,460] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:35,461] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:39,116] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:49:39,116] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:49:39,118] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:49:39,121] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:49:39,121] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:39,121] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:49:39,121] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:39,123] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/brands", parameters={}
[2025-06-23 15:49:39,123] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.BrandController#getBrands()
[2025-06-23 15:49:39,125] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0
[2025-06-23 15:49:39,126] INFO  com.example.order_service.service.BrandServiceImpl - Lấy thông tin danh sách các thương hiệu thành công
[2025-06-23 15:49:39,127] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:39,127] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetBrandResponse[id=1, name=Honda, country=Japannnnnêse], GetBrandResponse[id=2, name=Honda, countr (truncated)...]
[2025-06-23 15:49:39,127] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:39,606] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:39,606] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:39,607] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:39,608] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:39,609] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:39,609] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:39,609] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:39,610] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:39,611] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:49:39,611] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:49:39,612] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:49:39,613] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:49:39,615] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:49:39,615] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:39,615] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:49:39,615] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:40,011] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:40,011] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:40,013] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:40,014] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,015] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,016] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,017] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,017] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,018] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,018] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,019] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,019] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,019] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,021] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,021] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,021] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,021] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:40,022] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:40,022] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:40,022] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:40,024] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:49:40,024] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:49:40,027] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:49:40,028] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,028] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,029] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,029] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,030] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,030] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,044] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,044] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,046] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,046] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,047] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,047] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,048] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:49:40,048] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:49:40,049] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:40,049] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:49:40,049] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:45,106] DEBUG org.springframework.web.servlet.DispatcherServlet - OPTIONS "/api/v1/users", parameters={}
[2025-06-23 15:49:45,106] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:49:45,107] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:49:45,107] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/api/v1/users", parameters={}
[2025-06-23 15:49:45,108] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#createUser(CreateUserRequest)
[2025-06-23 15:49:45,108] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.example.order_service.dto.request.CreateUserRequest@2ecae2fb]
[2025-06-23 15:49:45,110] DEBUG org.hibernate.SQL - select u1_0.id from user u1_0 where u1_0.user_name=? limit ?
[2025-06-23 15:49:45,111] ERROR com.example.order_service.service.UserServiceImpl - Tên người dùng đã tồn tại
[2025-06-23 15:49:45,113] DEBUG org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.RuntimeException: Tên người dùng đã tồn tại
[2025-06-23 15:49:45,114] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Tên người dùng đã tồn tại] with root cause
java.lang.RuntimeException: Tên người dùng đã tồn tại
	at com.example.order_service.service.UserServiceImpl.createUser(UserServiceImpl.java:42) ~[classes/:?]
	at com.example.order_service.controller.UserController.createUser(UserController.java:35) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.7.jar:6.2.7]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.41.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.7.jar:6.2.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.7.jar:6.2.7]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.41.jar:10.1.41]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
[2025-06-23 15:49:45,115] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/error", parameters={}
[2025-06-23 15:49:45,115] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
[2025-06-23 15:49:45,116] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:49:45,116] DEBUG org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Mon Jun 23 15:49:45 ICT 2025, status=500, error=Internal Server Error, trace=java.lang.Ru (truncated)...]
[2025-06-23 15:49:45,117] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
[2025-06-23 15:50:06,769] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:50:06,769] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:50:06,769] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:50:06,769] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:50:06,770] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:50:06,770] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:50:06,772] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:50:06,772] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:50:06,772] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:50:06,772] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:50:06,772] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:06,773] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:06,773] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,773] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:50:06,773] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:06,773] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:06,773] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:50:06,775] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,775] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:06,775] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:06,775] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,775] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:06,775] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,776] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:50:06,776] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:50:06,776] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:06,776] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,776] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:50:06,776] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:50:06,776] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:06,776] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,777] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,777] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:50:06,778] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,778] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:50:06,780] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:50:06,780] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,780] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:50:06,781] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,781] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,782] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:50:06,782] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:06,782] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:50:06,782] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,782] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:50:06,783] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:06,783] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,783] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:06,783] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:50:06,783] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:06,783] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:06,783] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:50:06,783] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:06,785] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:06,785] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:06,785] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:06,786] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:50:06,786] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:50:06,786] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:50:06,786] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:06,786] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:50:06,786] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:06,788] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:50:06,789] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,790] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,791] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,791] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,792] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,792] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,793] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,793] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,793] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,794] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,794] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,795] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,795] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:06,795] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:50:06,796] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:06,796] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:50:06,796] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:08,272] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:50:08,272] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:50:08,272] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:50:08,272] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:50:08,273] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:50:08,273] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:50:08,274] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:50:08,274] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:50:08,274] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:50:08,275] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:50:08,275] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:08,276] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:08,276] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:50:08,276] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,276] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:08,276] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:08,276] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:50:08,277] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:08,277] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,277] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:08,277] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:08,277] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,278] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,278] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/cars", parameters={}
[2025-06-23 15:50:08,278] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:50:08,278] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.CarController#getCars()
[2025-06-23 15:50:08,278] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:08,278] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:50:08,279] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:08,279] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,279] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,279] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,c1_0.brand_id,c1_0.model,c1_0.price from car c1_0
[2025-06-23 15:50:08,281] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/rentals", parameters={}
[2025-06-23 15:50:08,281] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.RentalController#getRentals()
[2025-06-23 15:50:08,282] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,282] DEBUG org.hibernate.SQL - select b1_0.id,b1_0.country,b1_0.name from brand b1_0 where b1_0.id=?
[2025-06-23 15:50:08,283] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,284] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,284] INFO  com.example.order_service.service.CarServiceImpl - Xem thông tin danh sách xe thành công
[2025-06-23 15:50:08,284] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:08,285] DEBUG org.hibernate.SQL - select r1_0.id,r1_0.car_id,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price,r1_0.user_id from rental r1_0
[2025-06-23 15:50:08,285] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,285] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetCarResponse[id=2, model=heeeeeeeeheheeeeee, price=400, amount=3, brand=Honda], GetCarResponse[id (truncated)...]
[2025-06-23 15:50:08,285] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,285] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:08,285] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:08,286] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,286] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:08,286] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,287] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price from car c1_0 left join brand b1_0 on b1_0.id=c1_0.brand_id where c1_0.id=?
[2025-06-23 15:50:08,287] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:50:08,287] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:08,287] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:08,287] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:50:08,288] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0 where u1_0.id=?
[2025-06-23 15:50:08,288] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:08,289] INFO  com.example.order_service.service.RentalServiceImpl - Lấy danh sách các mục cho thuê thành công
[2025-06-23 15:50:08,289] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:08,289] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/api/v1/users", parameters={}
[2025-06-23 15:50:08,289] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetRentalResponse[id=1, rentalDate=2025-06-20, rentalDays=1, returnDate=2025-06-21, username=Bang V (truncated)...]
[2025-06-23 15:50:08,289] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to com.example.order_service.controller.UserController#getUsers()
[2025-06-23 15:50:08,289] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 15:50:08,291] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.password,u1_0.user_name from user u1_0
[2025-06-23 15:50:08,292] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,293] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,293] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,294] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,295] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,295] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,295] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,296] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,296] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,297] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,297] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,297] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,298] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.id,c1_0.id,c1_0.amount,b1_0.id,b1_0.country,b1_0.name,c1_0.model,c1_0.price,r1_0.rental_date,r1_0.rental_days,r1_0.return_date,r1_0.total_price from rental r1_0 left join car c1_0 on c1_0.id=r1_0.car_id left join brand b1_0 on b1_0.id=c1_0.brand_id where r1_0.user_id=?
[2025-06-23 15:50:08,298] INFO  com.example.order_service.service.UserServiceImpl - Lấy danh sách người dùng thành công
[2025-06-23 15:50:08,298] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
[2025-06-23 15:50:08,299] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor - Writing [[GetUserResponse[id=1, username=Bang Van Chien, rentalDTOS=[RentalDTO[id=1, carName=heeeeeeeeheheeee (truncated)...]
[2025-06-23 15:50:08,299] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
[2025-06-23 16:14:42,048] DEBUG org.springframework.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
[2025-06-23 16:14:42,053] DEBUG org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d0c146, started on Mon Jun 23 14:42:06 ICT 2025
[2025-06-23 16:14:42,078] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
[2025-06-23 16:14:42,096] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Graceful shutdown complete
[2025-06-23 16:14:42,115] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2025-06-23 16:14:42,129] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2025-06-23 16:14:42,136] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
